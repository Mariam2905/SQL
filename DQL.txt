* CREATE DATABASE COMPANY
 CREATE TABLE EMPLOYEE ( Employee ID, Name, Gender, Position, Department, Office, Age, Start Date, Salary)
 INSERT 10 000 values (EMPLOYEE)
 CREATE TABLE PROJECTS (Project ID, Project Name, Department, Start Date, End Date)
 INSERT 1 000 values (PROJECTS)


-- 1.	Select all columns from the "Employee" table:
SELECT * 
FROM employee;

-- 2.	Select all unique values from the "Department" column in the "Employee" table:
SELECT distinct department
FROM employee;

-- 3.	Select all employees whose position is "Senior Financial Analyst":
SELECT *
FROM employee
WHERE position = 'Senior Financial Analyst';

-- 4.	Select all female employees who work in the "Marketing" department or whose position is "Data Coordinator":
SELECT *
FROM employee
WHERE gender = 'Female' AND (department = 'Marketing' OR position = 'Data Coordinator');

-- 5.	Select all employees from the "Engineering" department, ordered by their salary in descending order:
SELECT *
FROM employee
WHERE department = 'Engineering'
ORDER BY (salary::money::numeric::float8) DESC;

-- 6.	Select all employees whose position is either "Software Test Engineer IV" or "Account Coordinator":

SELECT *
FROM employee
WHERE position = 'Software Test Engineer IV' OR position = 'Account Coordinator';

-- SELECT *
-- FROM employee
-- WHERE position like '%Software%';

-- SELECT *
-- FROM employee
-- WHERE position in ('Software Test Engineer IV','Account Coordinator');

-- 7.	Select all employees whose age is between 30 and 40:
SELECT *
FROM employee
WHERE age BETWEEN 30 AND 40;

-- 8.	Select the department and the highest salary for each department:
SELECT department, Max(salary::money::numeric::float8) as "Max salary"
FROM employee
GROUP BY department
Order BY "Max salary";

-- 9.	Select the average salary for all employees who started after 2018:
SELECT employee_id, first_name, last_name, position, department, start_date, 
AVG(salary::money::numeric::float8)
FROM employee
GROUP BY employee_id
HAVING start_date > '2018-01-01'
ORDER BY start_date;

-- SELECT employee_id, first_name, last_name, position, department, start_date, 
-- AVG(salary::money::numeric::float8)
-- FROM employee
-- GROUP BY employee_id
-- EXTRACT(YEAR FROM start_date) >= '2018'
-- ORDER BY start_date;

-- 10.	Select all projects that start after January 1st, 2022 and end before December 31st, 2022:
SELECT *
FROM projects
WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31';

-- 11.	Select all projects that started between January 1st, 2022 and December 31st, 2022:
SELECT *
FROM projects
WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31';
