SQL Commands

 	CREATE DATABASE TestDB

●	CREATE TABLE Flights ( flight_number, origin, destination, destination_time, arrival_time)

	CREATE TABLE Flights (
 	flight_number INT PRIMARY KEY,
  	origin VARCHAR(50) NOT NULL,
 	destination VARCHAR(50) NOT NULL,
  	departure_time date NOT NULL,
  	arrival_time date NOT NULL
	);

●	CREATE TABLE Passengers (passenger_id, name, email, phone_number)
	
	CREATE TABLE Passengers (
  	passenger_id INT PRIMARY KEY,
  	name VARCHAR(50) NOT NULL,
  	email VARCHAR(50) NOT NULL,
  	phone_number VARCHAR(20) NOT NULL
	);


●	CREATE TABLE Bookings (booking_id, flight_number, passenger_id, booking_date, cost)

	CREATE TABLE Bookings (
 	booking_id INT PRIMARY KEY,
  	flight_number INT NOT NULL,
  	passenger_id INT NOT NULL,
  	booking_date date NOT NULL,
  	cost DECIMAL(10,2) NOT NULL,
  	FOREIGN KEY (flight_number) REFERENCES Flights(flight_number),
  	FOREIGN KEY (passenger_id) REFERENCES Passengers(passenger_id)
	);


●	INSERT 1 000 value in tables




-- 1. Retrieve the average cost of all bookings made on the airline.
SELECT AVG(cost)
FROM Bookings;

-- 2. Retrieve the total number of flights that have departed from each origin airport.
SELECT COUNT (flight_number)
FROM Flights
Group BY (origin);

-- 3. Retrieve the total number of flights that have arrived at each destination airport.
SELECT COUNT (flight_number)
FROM FLights
Group BY (destination);

-- 4. Retrieve the total number of passengers who have booked flights departing from each origin airport.
SELECT origin, COUNT (passenger_id) AS "Total number of passengers"
FROM Bookings
INNER JOIN Flights F
ON Bookings.flight_number = F.Flight_number
GROUP BY origin;

-- 5. Retrieve the average cost of flights departing from each origin airport.
SELECT origin, AVG(cost) AS "Average"
FROM Bookings
INNER JOIN Flights F
ON Bookings.Flight_number=F.Flight_number
GROUP BY origin;

-- 6. Retrieve the total number of passengers who have booked flights departing from each origin airport, but only for airports with an average cost per passenger of less than $200.
SELECT origin, COUNT (passenger_id), AVG(cost) AS "Average"
FROM Bookings
INNER JOIN Flights F
ON Bookings.flight_number = F.Flight_number
GROUP BY origin
HAVING AVG(cost) < 200
ORDER BY "Average" DESC;

-- 7. Retrieve the total revenue generated by the airline, grouped by month.

-- SELECT SUM (cost) AS "Total revenue", booking_date
-- FROM Bookings
-- GROUP BY booking_date
-- HAVING booking_date BETWEEN '2023-01-01' AND '2023-01-31';

-- SELECT SUM (cost) AS "Total revenue"
-- FROM Bookings
-- Where booking_date BETWEEN '2023-01-01' AND '2023-01-31';

SELECT TO_CHAR(booking_date, 'Month') AS Month,
SUM (cost) AS "Total revenue"
FROM Bookings
GROUP BY MONTH;

